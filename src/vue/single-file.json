{
	"Create a Vue Single File Component using Composition API ": {
		"prefix": "vue",
		"body": [
			"<template>",
			"  <div>",
			"    ",
			"  </div>",
			"</template>",
			"",
			"<script>",
			"  import { ref, reactive } from 'vue';",
			"",
			"  export default {",
			"    setup(props, context) {",
			"      const ${3:feature}Ref = ref(${4:value});",
			"      const ${5:feature}State = reactive({ ${6:property}: ${7:'value'} });",
			"",
			"      return {",
			"        ${3}Ref,",
			"        ${5}State",
			"      }",
			"    }",
			"  }",
			"</script>",
			"",
			"<style lang=\"${1:scss}\" scoped>",
			"",
			"</style>"
		],
		"description": "A component option that is executed before the component is created, once the props are resolved, and serves as the entry point for composition API's"
	},
	"Vue Single File Component with Style": {
		"prefix": "vue",
		"body": [
			"<template>",
			"  <div>",
			"    ",
			"  </div>",
			"</template>",
			"",
			"<script>",
			"export default {",
			"  name: '${2:${TM_FILENAME_BASE}}',",
			"  ${3:components: { ${4:ComponentName} \\},}",
			"  ${5:directives: { ${6:DirectiveName} \\},}",
			"  data() {",
			"    return {",
			"      ${7}",
			"    };",
			"  },$0",
			"  mounted() {",
			"    ${8}",
			"  },",
			"  methods: {",
			"    ${9}",
			"  },",
			"};",
			"</script>",
			"",
			"<style lang=\"${1:scss}\" scoped>",
			"",
			"</style>"
		],
		"description": "Vue Single File Component with Style"
	},
	"Vue Single File Component with TypeScript": {
		"prefix": "vueTypeScript",
		"body": [
			"<template>",
			"  <div>",
			"",
			"  </div>",
			"</template>",
			"",
			"<script lang=\"ts\">",
			"import Vue from 'vue'",
			"",
			"export default Vue.extend({",
			"  ${0}",
			"})",
			"</script>",
			"",
			"<style lang=\"$1\" ${2:scoped}>",
			"",
			"</style>"
		],
		"description": "Vue Single File Component with TypeScript"
	},
	"Vue Single File Component with Class based TypeScript format": {
		"prefix": "vueTypeScriptClass",
		"body": [
			"<template>",
			"  <div>",
			"",
			"  </div>",
			"</template>",
			"",
			"<script lang=\"ts\">",
			"import { Component, Vue } from 'vue-property-decorator';",
			"",
			"@Component",
			"export default class ${0} extends Vue {",
			"\t",
			"}",
			"</script>",
			"",
			"<style lang=\"$1\" ${2:scoped}>",
			"",
			"</style>"
		],
		"description": "Base for Vue File with Class based TypeScript format"
	},
	"Vue Single File Component with No Style": {
		"prefix": "vueNoStyle",
		"body": [
			"<template>",
			"  <div>",
			"",
			"  </div>",
			"</template>",
			"",
			"<script>",
			"export default {",
			"  name: '${1:${TM_FILENAME_BASE}}',",
			"  components: { ${3} },",
			"  directives: { ${5} },",
			"  data() {",
			"    return {",
			"      ${6}",
			"    };",
			"  },$0",
			"  mounted() {",
			"    ${7}",
			"  },",
			"  methods: {",
			"    ${8}",
			"  },",
			"};",
			"</script>"
		],
		"description": "Vue Single File Component with No Style"
	},
	"Vue Template element": {
		"prefix": "vueTemplate",
		"body": [
			"<template>",
			"  <div$1>",
			"    $0",
			"  </div>",
			"</template>"
		],
		"description": "Vue Template element"
	},
	"Vue Script element": {
		"prefix": "vueScript",
		"body": [
			"<script>",
			"export default {",
			"  name: '${1:${TM_FILENAME_BASE}}',",
			"  ${2:components: { ${3:ComponentName} \\},}",
			"  ${4:directives: { ${5:DirectiveName} \\},}",
			"  data() {",
			"    return {",
			"      ${6}",
			"    };",
			"  },$0",
			"  mounted() {",
			"    ${7}",
			"  },",
			"  methods: {",
			"    ${8}",
			"  },",
			"};",
			"</script>"
		],
		"description": "Vue Script element"
	},
	"Vue Style element": {
		"prefix": ["vueStyle", "styleLang"],
		"body": [
			"<style ${1:lang=\"$2\"} ${3:scoped}>",
			"  $0",
			"</style>"
		],
		"description": "Vue Style element"
	}
}
